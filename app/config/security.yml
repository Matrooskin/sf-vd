jms_security_extra:
    secure_all_services: false
    expressions: true

security:
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext

#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        main:
            entity: { class: VD\AccountBundle\Entity\User, property: email }
    encoders:
        VD\AccountBundle\Entity\User:
            algorithm:        sha1
            encode_as_base64: false
            iterations:       1
#    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/login$
            security: false

        register:
            pattern:  ^/register
            security: false

        secured_area:
            pattern:    ^/
            form_login:
                check_path: /login_check
                login_path: /login
            logout:
                path:   /logout
#                target: /
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #
        # You must uncomment the two following rules to restrict access to paths
        # starting with the /_internal prefix to only localhost
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        #- { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
